[package]
name = "sqlx-macros-core"
description = "Macro support core for SQLx, the Rust SQL toolkit. Not intended to be used directly."
version.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
rust-version.workspace = true

[features]
default = []

# for conditional compilation
_rt-async-global-executor = ["async-global-executor", "sqlx-core/_rt-async-global-executor"]
_rt-async-std = ["async-std", "sqlx-core/_rt-async-std"]
_rt-smol = ["smol", "sqlx-core/_rt-smol"]
_rt-tokio = ["tokio", "sqlx-core/_rt-tokio"]

_tls-native-tls = ["sqlx-core/_tls-native-tls"]
_tls-rustls-aws-lc-rs = ["sqlx-core/_tls-rustls-aws-lc-rs"]
_tls-rustls-ring-webpki = ["sqlx-core/_tls-rustls-ring-webpki"]
_tls-rustls-ring-native-roots = ["sqlx-core/_tls-rustls-ring-native-roots"]

# SQLx features
derive = []
macros = []
migrate = ["sqlx-core/migrate"]

sqlx-toml = ["sqlx-core/sqlx-toml"]

# database
postgres = ["sqlx-postgres"]

# type integrations
json = ["sqlx-core/json", "sqlx-postgres?/json"]

bigdecimal = ["sqlx-core/bigdecimal", "sqlx-postgres?/bigdecimal"]
bit-vec = ["sqlx-core/bit-vec", "sqlx-postgres?/bit-vec"]
chrono = ["sqlx-core/chrono", "sqlx-postgres?/chrono"]
ipnet = ["sqlx-core/ipnet", "sqlx-postgres?/ipnet"]
ipnetwork = ["sqlx-core/ipnetwork", "sqlx-postgres?/ipnetwork"]
mac_address = ["sqlx-core/mac_address", "sqlx-postgres?/mac_address"]
rust_decimal = ["sqlx-core/rust_decimal", "sqlx-postgres?/rust_decimal"]
time = ["sqlx-core/time", "sqlx-postgres?/time"]
uuid = ["sqlx-core/uuid", "sqlx-postgres?/uuid"]

[dependencies]
sqlx-core = { workspace = true, features = ["offline"] }
sqlx-postgres = { workspace = true, features = ["offline", "migrate"], optional = true }

async-global-executor = { workspace = true, optional = true }
async-std = { workspace = true, optional = true }
smol = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }

cfg-if = { workspace = true}
dotenvy = { workspace = true }

hex = { version = "0.4.3" }
heck = { version = "0.5" }
either = "1.6.1"
proc-macro2 = { version = "1.0.79", default-features = false }
serde = { version = "1.0.132", features = ["derive"] }
serde_json = { version = "1.0.73" }
sha2 = { version = "0.10.0" }
syn = { version = "2.0.52", default-features = false, features = ["full", "derive", "parsing", "printing", "clone-impls"] }
quote = { version = "1.0.26", default-features = false }
url = { version = "2.2.2" }

[lints.rust.unexpected_cfgs]
level = "warn"
check-cfg = ['cfg(sqlx_macros_unstable)', 'cfg(procmacro2_semver_exempt)']
